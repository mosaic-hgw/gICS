<!--
  ###license-information-start###
  gICS - a Generic Informed Consent Service
  __
  Copyright (C) 2014 - 2023 Trusted Third Party of the University Medicine Greifswald -
  							kontakt-ths@uni-greifswald.de
  
  							concept and implementation
  							l.geidel, c.hampf
  							web client
  							a.blumentritt, m.bialke, f.m.moser
  							fhir-api
  							m.bialke
  							docker
  							r. schuldt
  
  							The gICS was developed by the University Medicine Greifswald and published
  							in 2014 as part of the research project "MOSAIC" (funded by the DFG HO 1937/2-1).
  
  							Selected functionalities of gICS were developed as
  							part of the following research projects:
  							- MAGIC (funded by the DFG HO 1937/5-1)
  							- MIRACUM (funded by the German Federal Ministry of Education and Research 01ZZ1801M)
  							- NUM-CODEX (funded by the German Federal Ministry of Education and Research 01KX2021)
  
  							please cite our publications
  							https://doi.org/10.1186/s12911-022-02081-4
  							https://doi.org/10.1186/s12967-020-02457-y
  							http://dx.doi.org/10.3414/ME14-01-0133
  							http://dx.doi.org/10.1186/s12967-015-0545-6
  							http://dx.doi.org/10.3205/17gmds146
  __
  This program is free software: you can redistribute it and/or modify
  it under the terms of the GNU Affero General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.
  
  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.
  
  You should have received a copy of the GNU Affero General Public License
  along with this program.  If not, see <http://www.gnu.org/licenses/>.
  ###license-information-end###
  -->

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:h="http://java.sun.com/jsf/html" xmlns:f="http://java.sun.com/jsf/core"
	  xmlns:ui="http://java.sun.com/jsf/facelets" xmlns:p="http://primefaces.org/ui" xmlns:components="http://java.sun.com/jsf/composite/components"
	  xmlns:file="http://java.sun.com/jsf/composite/components/file">

<body>
<ui:composition template="/resources/templates/gics.xhtml">
	<ui:define name="css">
		<link rel="stylesheet" type="text/css" href="#{request.contextPath}/html/public/assets/css/policyStatus.css" />
	</ui:define>

	<ui:define name="header_title">
		<h:outputText value="#{msg['page.policyStatus.title']}" />
	</ui:define>

	<ui:define name="title">
		<h:outputText value="#{msg['page.policyStatus.title']}" />
	</ui:define>

	<ui:define name="help">
		<h:outputText value="#{msg['page.policyStatus.help']}" escape="false" />
	</ui:define>

	<ui:define name="content">
		<h:form id="main" enctype="multipart/form-data;charset=UTF-8">

			<!-- Choose mode -->
			<p:panel id="choose_panel">
				<h4>#{msg['page.policyStatus.chooseMode']}</h4>
				<p:commandButton actionListener="#{policyStatusController.chooseUpload}" icon="mdi mdi-upload" process="@this" style="margin-right:15px;"
								 styleClass="#{policyStatusController.mode != null and policyStatusController.mode == 'UPLOAD' ? '' : 'secondary'}" update="main"
								 value="#{msg['page.policyStatus.chooseMode.upload']}">
				</p:commandButton>
				<p:commandButton actionListener="#{policyStatusController.chooseAll}" icon="mdi mdi-expand-all" process="@this"
								 styleClass="#{policyStatusController.mode != null and policyStatusController.mode == 'ALL' ? '' : 'secondary'}" update="main"
								 value="#{msg['page.policyStatus.chooseMode.all']}">
				</p:commandButton>
			</p:panel>

			<!-- Upload file -->
			<p:panel rendered="#{policyStatusController.mode == 'UPLOAD'}" style="margin-top: 15px;">
				<h4>
					<h:outputText value="#{msg['page.policyStatus.step.upload']}" />
				</h4>
				<file:upload webFile="#{policyStatusController.webFile}" rendered="#{empty policyStatusController.webFile.uploadFile}"
							 containsHeaderText="#{msg['page.policyStatus.step.upload.containsHeader']}" />
				<file:details webFile="#{policyStatusController.webFile}" onNewUpload="#{policyStatusController.onNewUpload}"
							  rendered="#{not empty policyStatusController.webFile.uploadFile}" />
			</p:panel>

			<!-- Load all signerIds -->
			<p:panel rendered="#{policyStatusController.mode == 'ALL'}" style="margin-top: 15px;">
				<h4>
					<h:outputText value="#{msg['page.policyStatus.step.all_1']}" />
				</h4>
				<p:panelGrid columns="2" columnClasses="ui-grid-col-3,ui-grid-col-9" layout="grid">
					<!-- SignerIdType -->
					<p:outputLabel value="#{msg['page.policyStatus.signerId']}" />
					<p:selectOneMenu value="#{policyStatusController.signerIdType}" id="modeAllSignerIdType">
						<f:selectItems value="#{policyStatusController.selectedDomain.signerIdTypes}" var="_id" itemLabel="#{_id}" itemValue="#{_id}" />
					</p:selectOneMenu>

					<p:commandButton
							value="#{empty policyStatusController.webFile.elements ? msg['page.policyStatus.loadSignerIds'] : msg['page.policyStatus.loadSignerIdsAgain']}"
							actionListener="#{policyStatusController.onLoadAllSignerIds}"
							icon="mdi #{empty policyStatusController.webFile.elements ? 'mdi-account-search' : 'mdi-reload'}" process="@this, modeAllSignerIdType"
							update="main" styleClass="#{empty policyStatusController.webFile.elements ? '' : 'secondary'}" />
				</p:panelGrid>
			</p:panel>

			<!-- Preview data -->
			<p:panel rendered="#{not empty policyStatusController.webFile.elements}" style="margin-top: 15px;">
				<ui:fragment rendered="#{policyStatusController.mode == 'UPLOAD'}">
					<h4>
						<h:outputText value="#{msg['page.policyStatus.step.checkData']}" />
						<components:tooltip id="checkDataHint" value="#{msg['page.policyStatus.step.checkData.hint']}" />
					</h4>
				</ui:fragment>
				<ui:fragment rendered="#{policyStatusController.mode == 'ALL'}">
					<h4>
						<h:outputFormat value="#{msg['page.policyStatus.step.previewData']}">
							<f:param value="#{policyStatusController.webFile.elements.size()}" />
						</h:outputFormat>
					</h4>
				</ui:fragment>
				<p:dataTable id="elements" widgetVar="elements" value="#{policyStatusController.webFile.elements}" var="_row" paginator="true"
							 paginatorPosition="bottom" paginatorTemplate="{CurrentPageReport} {FirstPageLink} {PreviousPageLink} {PageLinks} {NextPageLink} {LastPageLink}"
							 currentPageReportTemplate="{startRecord}-{endRecord} #{cmsg['ui.table.of']} {totalRecords}" rows="10" pageLinks="3"
							 emptyMessage="#{cmsg['ui.table.empty']}">

					<f:facet name="header" style="text-align:left; padding: 0;">
						<p:inputText id="globalFilter" onkeyup="PF('elements').filter()" placeholder="#{cmsg['ui.table.filter']}" />
					</f:facet>

					<p:columns filterStyle="display:none;" filterMatchMode="contains" filterBy="#{_columnIndex lt _row.size() ? _row.get(_columnIndex) : ''}"
							   value="#{policyStatusController.webFile.columns}" var="_column" columnIndexVar="_columnIndex"
							   styleClass="hl hl-#{policyStatusController.webFile.selectedColumnCSS} relative">
						<f:facet name="header">
							<h:outputFormat value="#{_column}" />
							<h:outputFormat value=" [#{policyStatusController.getPolicyLabelAndVersion(policyStatusController.webFile.columnPolicyMapping.get(_column))}]"
											rendered="#{policyStatusController.webFile.columnPolicyMapping.containsKey(_column)}" />
							<p:commandButton actionListener="#{policyStatusController.webFile.setSelectedColumn(_columnIndex)}"
											 disabled="#{policyStatusController.webFile.processed or policyStatusController.webFile.columnPolicyMapping.containsKey(_column)}"
											 update="main:elements, main:options" process="@this" value=" " styleClass="secondary thButton"
											 rendered="#{policyStatusController.webFile.selectedColumn ne _columnIndex}" />
						</f:facet>
						<h:outputText value="#{_columnIndex lt _row.size() ? _row.get(_columnIndex) : ''}" />
					</p:columns>
				</p:dataTable>
			</p:panel>

			<!-- Set options -->
			<p:panel rendered="#{not empty policyStatusController.webFile.elements}" id="options" style="margin-top: 15px;">
				<h4>
					<h:outputText value="#{msg['page.policyStatus.step.processData']}" />
				</h4>
				<h:outputText value="#{msg['page.policyStatus.step.processData.first.info']}" escape="false" rendered="#{policyStatusController.detectedPoliciesSize == 0}" />
				<h:outputFormat value="#{msg['page.policyStatus.step.processData.found.info']}" escape="false" rendered="#{policyStatusController.detectedPoliciesSize != 0}">
					<f:param value="#{policyStatusController.detectedPoliciesSize}" />
				</h:outputFormat>
				<br />
				<h:outputText value="#{msg['page.policyStatus.step.processData.later.info']}" />
				<br />
				<br />

				<p:panelGrid columns="2" columnClasses="ui-grid-col-3,ui-grid-col-9" layout="grid">

					<!-- Policy -->
					<p:outputLabel value="#{msg['page.policyStatus.policy']}" rendered="#{policyStatusController.detectedPoliciesSize == 0}" />
					<p:selectOneMenu required="true" value="#{policyStatusController.policy}" converter="genericConverter" filter="true" filterMatchMode="contains"
									 styleClass="max" rendered="#{policyStatusController.detectedPoliciesSize == 0}">
						<f:selectItems value="#{policyStatusController.availablePolicies}" var="_policy" itemLabel="#{policyStatusController.getPolicyLabelAndVersion(_policy)}"
									   itemValue="#{_policy}" />
						<p:ajax partialSubmit="true" process="@this" />
					</p:selectOneMenu>

					<!-- Detailed -->
					<p:column>
						<p:outputLabel value="#{msg['page.policyStatus.detailedResult']}" />
						<components:tooltip id="detaileResult" value="#{msg['page.policyStatus.detailedResult.hint']}" />
					</p:column>
					<p:selectBooleanCheckbox value="#{policyStatusController.detailedResult}" />

					<!-- Request Date -->
					<p:column>
						<p:outputLabel id="requestDateLabel" value="#{msg['page.policyStatus.requestDate']}"
									   style="height: #{policyStatusController.requestDateType.name() == 'DATE' ? '112' : '70'}px; display: inline-block;" />
						<components:tooltip id="requestDate" value="#{msg['page.policyStatus.requestDate.hint']}" />
					</p:column>
					<p:outputPanel>
						<p:selectOneRadio id="requestDateType" value="#{policyStatusController.requestDateType}" layout="custom">
							<f:selectItems value="#{policyStatusController.availableRequestDateTypes}" />
							<p:ajax update="@parent, requestDateLabel" process="@this" partialSubmit="true" />
						</p:selectOneRadio>

						<p:panelGrid columns="2" styleClass="no-border">
							<p:radioButton id="opt0" for="requestDateType" itemIndex="0" />
							<h:outputLabel for="opt0" value="#{msg['page.policyStatus.requestDate.'.concat(policyStatusController.availableRequestDateTypes[0].name())]}" />

							<p:radioButton id="opt1" for="requestDateType" itemIndex="1" />
							<h:panelGroup layout="block">
								<h:outputLabel for="opt1" value="#{msg['page.policyStatus.requestDate.'.concat(policyStatusController.availableRequestDateTypes[1].name())]}" />
								<p:datePicker id="requestDateDate"
											  disabled="#{policyStatusController.requestDateType.name() != 'DATE'}"
											  mask="#{cmsg['ui.date.mask.date']}"
											  pattern="#{cmsg['ui.date.pattern.date']}"
											  required="#{policyStatusController.requestDateType.name() == 'DATE'}"
											  style="display: inline-block; margin-left: 10px;"
											  value="#{policyStatusController.requestDate}" />
							</h:panelGroup>

							<p:selectBooleanCheckbox id="useHistoricalData" rendered="#{policyStatusController.requestDateType.name() == 'DATE'}" style="margin-right: -7px;"
													 value="#{policyStatusController.useHistoricalData}" />
							<h:panelGroup layout="block" rendered="#{policyStatusController.requestDateType.name() == 'DATE'}">
								<h:outputLabel for="useHistoricalData"
											   value="#{msg['page.policyStatus.requestDate.useHistoricalData']}" />
								<components:tooltip value="#{msg['page.policyStatus.requestDate.useHistoricalData.hint']}" />
							</h:panelGroup>
						</p:panelGrid>
					</p:outputPanel>

					<!-- SignerIdType -->
					<p:outputLabel value="#{msg['page.policyStatus.signerId']}" rendered="#{policyStatusController.mode == 'UPLOAD'}" />
					<p:selectOneMenu value="#{policyStatusController.signerIdType}" rendered="#{policyStatusController.mode == 'UPLOAD'}">
						<f:selectItems value="#{policyStatusController.selectedDomain.signerIdTypes}" var="_id" itemLabel="#{_id}" itemValue="#{_id}" />
						<p:ajax process="@this" partialSubmit="true" />
					</p:selectOneMenu>

					<!-- Process -->
					<p:commandButton value="#{policyStatusController.webFile.processed ? cmsg['ui.button.reprocess'] : cmsg['ui.button.process']}"
									 icon="mdi mdi-database-export" styleClass="#{policyStatusController.webFile.processed ? 'secondary' : ''}"
									 actionListener="#{policyStatusController.onRequestPolicy}"
									 rendered="#{policyStatusController.detectedPoliciesSize == 0}"
									 update="main" onclick="PF('progressDialog').show();PF('progressBar').start();"
									 oncomplete="PF('progressDialog').hide();PF('progressBar').cancel();" />
					<p:commandButton value="#{cmsg['ui.button.process.all']}"
									 icon="mdi mdi-database-export" styleClass="#{policyStatusController.webFile.processed ? 'secondary' : ''}"
									 actionListener="#{policyStatusController.onProcessUploadedPolicies}"
									 rendered="#{policyStatusController.detectedPoliciesSize != 0}"
									 update="main" onclick="PF('progressDialog').show();PF('progressBar').start();"
									 oncomplete="PF('progressDialog').hide();PF('progressBar').cancel();" />

				</p:panelGrid>
			</p:panel>

			<!-- Download result -->
			<p:panel rendered="#{policyStatusController.webFile.processed}" style="margin-top: 15px;">
				<h4>
					<h:outputText value="#{msg['page.policyStatus.step.download']}" />
				</h4>
				<p:commandButton value="#{cmsg['ui.button.download']}" icon="mdi mdi-download" ajax="false" actionListener="#{policyStatusController.onDownload}">
					<p:fileDownload value="#{policyStatusController.webFile.downloadFile}" />
				</p:commandButton>
			</p:panel>
		</h:form>

		<!-- Watch progress -->
		<file:progress size="#{policyStatusController.webFile.elements.size()}" progress="#{policyStatusController.progress}"
					   message="#{msg['page.policyStatus.progress.processing']}" />
	</ui:define>
</ui:composition>
</body>
</html>
