<!--
  ###license-information-start###
  gICS - a Generic Informed Consent Service
  __
  Copyright (C) 2014 - 2018 The MOSAIC Project - Institut fuer Community
  							Medicine of the University Medicine Greifswald -
  							mosaic-projekt@uni-greifswald.de
  
  							concept and implementation
  							l.geidel
  							web client
  							a.blumentritt, m.bialke
  
  							Selected functionalities of gICS were developed as part of the MAGIC Project (funded by the DFG HO 1937/5-1).
  
  							please cite our publications
  							http://dx.doi.org/10.3414/ME14-01-0133
  							http://dx.doi.org/10.1186/s12967-015-0545-6
  							http://dx.doi.org/10.3205/17gmds146
  __
  This program is free software: you can redistribute it and/or modify
  it under the terms of the GNU Affero General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.
  
  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.
  
  You should have received a copy of the GNU Affero General Public License
  along with this program.  If not, see <http://www.gnu.org/licenses/>.
  ###license-information-end###
  -->

<!-- author: Arne Blumentritt -->

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core" xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:jstl="http://java.sun.com/jsp/jstl/functions" xmlns:p="http://primefaces.org/ui"
	xmlns:components="http://java.sun.com/jsf/composite/components">

<body>
	<ui:composition template="/resources/templates/gics.xhtml">
		<ui:define name="header_title">
			<h:outputText value="#{msg['policy.titleHeader']}" />
		</ui:define>

		<ui:define name="title">
			<h:outputText value="#{msg['policy.title']}" rendered="#{!policyController.editMode}" />
			<h:outputText value="#{msg['policy.new.title']}" rendered="#{policyController.editMode}" />
		</ui:define>

		<ui:define name="help">
			<h:outputText value="#{msg['policy.help']}" escape="false" />
		</ui:define>
		<ui:define name="content">
			<h:panelGroup layout="block" id="listPolicies">
				<h:form onkeypress="if (event.keyCode == 13) { return false; }"
					rendered="#{!policyController.editMode}">
					<p:panel>
						<h4>
							<h:outputText value="#{msg['policy.label.new']}" />
						</h4>
						<p:commandButton actionListener="#{policyController.onNewPolicy}"
							update="listPolicies, newPolicy, title" value="#{msg['common.button.add']}" />
					</p:panel>

					<p:panel>
						<h4>
							<h:outputFormat value="#{msg['policy.label.found']}">
								<f:param value="#{policyController.policies.size()}" />
							</h:outputFormat>
						</h4>

						<p:dataTable id="policies" widgetVar="policies" value="#{policyController.policies}"
							var="_policy" rowKey="#{_policy.key}" paginator="true" paginatorPosition="bottom"
							paginatorTemplate="{CurrentPageReport} {FirstPageLink} {PreviousPageLink} {PageLinks} {NextPageLink} {LastPageLink}"
							currentPageReportTemplate="{startRecord}-{endRecord} #{cmsg['ui.table.of']} {totalRecords}"
							rows="10" pageLinks="1" sortBy="#{_policy.key.name}" selectionMode="single"
							selection="#{policyController.selectedPolicy}">

							<f:facet name="header">
								<p:inputText id="globalFilter" onkeyup="PF('policies').filter()"
									placeholder="#{cmsg['ui.table.search']}" />
							</f:facet>

							<p:column headerText="#{msg['policy.name']}" sortBy="#{_policy.key.name}"
								filterBy="#{_policy.key.name}" filterable="false" width="50%">
								<h:outputText value="#{_policy.key.name}" />
							</p:column>
							<p:column headerText="#{msg['policy.version']}" sortBy="#{_policy.key.version}"
								filterBy="#{_policy.key.version}" filterable="false">
								<h:outputText value="#{_policy.key.version}" />
							</p:column>
							<p:column headerText="#{msg['policy.comment']}" sortBy="#{_policy.comment}"
								filterBy="#{_policy.comment}" filterable="false" width="50%" style="min-width: 150px;">
								<h:outputText value="#{_policy.comment}" styleClass="ellipsis" />
							</p:column>

							<p:column headerText="#{msg['common.button.actions']}" styleClass="icons">
								<p:commandButton action="#{policyController.onDeletePolicy(_policy)}" update="@form"
									icon="mdi mdi-delete-empty" alt="#{msg['common.button.delete']}"
									title="#{msg['common.button.delete']}">
									<p:confirm header="#{msg['common.confirmation']}"
										message="#{msg['policy.label.confirmDelete']}" icon="mdi mdi-alert-outline" />
								</p:commandButton>
								<p:confirmDialog global="true">
									<p:commandButton value="#{msg['common.button.yes']}" type="button"
										styleClass="ui-confirmdialog-yes" />
									<p:commandButton value="#{msg['common.button.no']}" type="button"
										styleClass="ui-confirmdialog-no" />
								</p:confirmDialog>
							</p:column>
						</p:dataTable>

						<p:contextMenu for="policies" event="contextmenu touchend">
							<p:menuitem value="#{msg['common.button.delete']}" icon="mdi mdi-delete-empty"
								actionListener="#{policyController.onDeletePolicy(policyController.selectedPolicy)}"
								update="@form">
								<p:confirm header="#{msg['common.confirmation']}"
									message="#{msg['policy.label.confirmDelete']}" icon="mdi mdi-alert-outline" />
							</p:menuitem>
						</p:contextMenu>
					</p:panel>
				</h:form>
			</h:panelGroup>

			<h:panelGroup layout="block" id="newPolicy">
				<components:new_policy policyController="#{policyController}"
					update="listPolicies, newPolicy, title" rendered="#{policyController.editMode}" />
			</h:panelGroup>

		</ui:define>
	</ui:composition>
</body>
</html>
